{"version":3,"file":"static/js/516.cdd2ddb9.chunk.js","mappings":"qPAaMA,EAAS,CACXC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KA4FpB,UAvFA,SAAoBK,GAClB,IAAMC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,EAAWJ,EAAXI,OACR,GAAwBC,EAAAA,EAAAA,UAAS,MAAK,eAA/BC,EAAI,KAAEC,EAAO,KACpB,GAA0BF,EAAAA,EAAAA,UAAS,QAAO,eAAnCG,EAAK,KAAEC,EAAQ,KACtB,GAAwBJ,EAAAA,EAAAA,UAAS,wBAAuB,eAA3CK,GAAF,KAAS,MA2BpB,OAzBAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,YACdC,MAAMC,EAAAA,EAAAA,UAAqB,CACzBC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKT,EAAQS,EAAIE,UAAU,IACpCC,OAAM,SAACC,GAAG,OAAKA,CAAG,IAEnBC,QAAQC,IAAIhB,IAEJ,QAAN,EAAAiB,cAAM,aAAN,EAAQC,YAAa,KACvBd,EAAQ,aAGA,QAAN,EAAAa,cAAM,aAAN,EAAQC,YAAa,MAER,QAAN,EAAAD,cAAM,aAAN,EAAQC,aAAc,MAAa,QAAN,EAAAD,cAAM,aAAN,EAAQC,YAAa,IAD3Df,EAAS,SAGM,QAAN,EAAAc,cAAM,aAAN,EAAQC,aAAc,MAAa,QAAN,EAAAD,cAAM,aAAN,EAAQC,YAAa,KAC3Df,EAAS,QAETA,EAAS,OAEb,GAAG,KAGD,iCACE,SAAC,UAAM,CAACgB,MAAOrB,IACdE,GACC,SAAC,KAAI,WACH,gBAAKoB,MAAO,CAAElB,MAAAA,GAASmB,UAAU,4BAA2B,UAC5D,SAAC,EAAAC,SAAQ,CACHC,UAAW5B,EAAM6B,kBAAkB,SAElCxB,EAAKyB,KAAI,SAACC,GAAI,OACb,SAAC,KAAI,WACH,UAAC,EAAAC,aAAY,CAEXC,SAAUF,EAAKP,MACfU,eAAgB,CAAEC,WAAYnC,EAAMoC,aACpCX,MAAOrC,EAAOU,UACduC,mBAAoB,CAAEC,MAAOtC,EAAMsC,OAAQ,WAE3C,eAAIZ,UAAU,aAAY,SACvBK,EAAKQ,aAER,iBAAKd,MAAOrC,EAAOI,uBAAuB,WACxC,gBAAIiC,OAAK,kBAAOrC,EAAOO,eAAa,IAAE2C,MAAOtC,EAAMoC,cAAc,WAChE,kBACEL,EAAKS,iBAER,mBACA,mBACA,kBACCT,EAAKU,mBACN,gBAAIhB,MAAOrC,EAAOS,YAAY,UAAC,WAE5B,IACAkC,EAAKU,yBArBLV,EAAKQ,YA0BP,WAOf,SAAC,UAAe,MAI1B,C,2DCtGA,UATA,SAAgBxC,GACd,IAAQyB,EAAUzB,EAAVyB,MACR,OAAO,gBAAKE,UAAU,SAAQ,UAAC,cAAGA,UAAU,cAAa,SAAEF,KAC7D,C","sources":["components/Education2.jsx","components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Chrono } from 'react-chrono';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\r\nimport PropTypes from 'prop-types';\r\nimport Fade from 'react-reveal';\r\nimport { ThemeContext } from 'styled-components';\r\nimport endpoints from '../constants/endpoints';\r\nimport Header from './Header';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/education.css';\r\n\r\n\r\nconst styles = {\r\n    ulStyle: {\r\n      listStylePosition: 'outside',\r\n      paddingLeft: 20,\r\n    },\r\n    subtitleContainerStyle: {\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n    },\r\n    subtitleStyle: {\r\n      display: 'inline-block',\r\n    },\r\n    inlineChild: {\r\n      display: 'inline-block',\r\n    },\r\n    itemStyle: {\r\n      marginBottom: 10,\r\n    },\r\n  };\r\n  \r\n\r\nfunction Education2(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n  const [width, setWidth] = useState('50vw');\r\n  const [mode, setMode] = useState('VERTICAL_ALTERNATING');\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.education, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.education))\r\n      .catch((err) => err);\r\n\r\n      console.log(data); \r\n\r\n    if (window?.innerWidth < 576) {\r\n      setMode('VERTICAL');\r\n    }\r\n\r\n    if (window?.innerWidth < 576) {\r\n      setWidth('90vw');\r\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\r\n      setWidth('90vw');\r\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\r\n      setWidth('75vw');\r\n    } else {\r\n      setWidth('50vw');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      {data ? (\r\n        <Fade>\r\n          <div style={{ width }} className=\"section-content-container\">\r\n          <Timeline\r\n                lineColor={theme.timelineLineColor}\r\n              >\r\n                {data.map((item) => (\r\n                  <Fade>\r\n                    <TimelineItem\r\n                      key={item.cardTitle}\r\n                      dateText={item.title}\r\n                      dateInnerStyle={{ background: theme.accentColor }}\r\n                      style={styles.itemStyle}\r\n                      bodyContainerStyle={{ color: theme.color }}\r\n                    >\r\n                      <h2 className=\"item-title\">\r\n                        {item.cardTitle}\r\n                      </h2>\r\n                      <div style={styles.subtitleContainerStyle}>\r\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                         <br/>\r\n                          {item.cardSubtitle}\r\n                        </h4>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        {item.cardDetailedText && (\r\n                        <h5 style={styles.inlineChild}>\r\n                    &nbsp;Â·\r\n                          {' '}\r\n                          {item.cardDetailedText}\r\n                        </h5>\r\n                        )}\r\n                      </div>\r\n                        </TimelineItem>\r\n                  </Fade>\r\n                ))}\r\n              </Timeline>\r\n\r\n          </div>\r\n        </Fade>\r\n        \r\n      ) : <FallbackSpinner /> }\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nEducation2.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Education2;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\"><p className='header_text'>{title}</p></div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"],"names":["styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","props","theme","useContext","ThemeContext","header","useState","data","setData","width","setWidth","setMode","useEffect","fetch","endpoints","method","then","res","json","education","catch","err","console","log","window","innerWidth","title","style","className","Timeline","lineColor","timelineLineColor","map","item","TimelineItem","dateText","dateInnerStyle","background","accentColor","bodyContainerStyle","color","cardTitle","cardSubtitle","cardDetailedText"],"sourceRoot":""}