{"version":3,"file":"static/js/636.b9ecc527.chunk.js","mappings":"2RAYMA,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KAmFlB,MA/EA,SAAoBK,GAClB,IAAMC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,EAAWJ,EAAXI,OACR,GAAwBC,EAAAA,EAAAA,UAAS,MAAK,eAA/BC,EAAI,KAAEC,EAAO,KAWpB,OATAC,EAAAA,EAAAA,YAAU,WACRC,MAAMC,EAAAA,EAAAA,YAAuB,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKN,EAAQM,EAAIE,YAAY,IACtCC,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,KAGD,iCACE,SAACC,EAAA,QAAM,CAACC,MAAOf,IAEdE,GAEG,gBAAKc,UAAU,4BAA2B,UACxC,SAACC,EAAA,EAAS,WACR,SAAC,EAAAC,SAAQ,CACPC,UAAWtB,EAAMuB,kBAAkB,SAElClB,EAAKmB,KAAI,SAACC,GAAI,OACb,SAAC,KAAI,WACH,UAAC,EAAAC,aAAY,CAEXC,SAAUF,EAAKE,SACfC,eAAgB,CAAEC,WAAY7B,EAAM8B,aACpCC,MAAO3C,EAAOU,UACdkC,mBAAoB,CAAEC,MAAOjC,EAAMiC,OAAQ,WAE3C,eAAId,UAAU,aAAY,SACvBM,EAAKP,SAER,iBAAKa,MAAO3C,EAAOI,uBAAuB,WACxC,eAAIuC,OAAK,kBAAO3C,EAAOO,eAAa,IAAEsC,MAAOjC,EAAM8B,cAAc,SAC9DL,EAAKS,WAEPT,EAAKU,WACN,gBAAIJ,MAAO3C,EAAOS,YAAY,UAAC,WAE5B,IACA4B,EAAKU,gBAIV,eAAIJ,MAAO3C,EAAOC,QAAQ,SACvBoC,EAAKW,gBAAgBZ,KAAI,SAACa,GAAK,OAC9B,4BACE,yBACE,SAAC,IAAa,CACZC,SAAUD,EACVE,WAAY,CACVC,EAAG,aAIT,oBATQH,EAUJ,QAjCLZ,EAAKP,MAAQO,EAAKE,WAqCpB,WAKb,SAACc,EAAA,QAAe,MAG5B,C,2DC5FA,UATA,SAAgB1C,GACd,IAAQmB,EAAUnB,EAAVmB,MACR,OAAO,gBAAKC,UAAU,SAAQ,UAAC,cAAGA,UAAU,cAAa,SAAED,KAC7D,C","sources":["components/Experience.jsx","components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\r\nimport { Container } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport Fade from 'react-reveal';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/experience.css';\r\n\r\nconst styles = {\r\n  ulStyle: {\r\n    listStylePosition: 'outside',\r\n    paddingLeft: 20,\r\n  },\r\n  subtitleContainerStyle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  subtitleStyle: {\r\n    display: 'inline-block',\r\n  },\r\n  inlineChild: {\r\n    display: 'inline-block',\r\n  },\r\n  itemStyle: {\r\n    marginBottom: 10,\r\n  },\r\n};\r\n\r\nfunction Experience(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.experiences, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.experiences))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              <Timeline\r\n                lineColor={theme.timelineLineColor}\r\n              >\r\n                {data.map((item) => (\r\n                  <Fade>\r\n                    <TimelineItem\r\n                      key={item.title + item.dateText}\r\n                      dateText={item.dateText}\r\n                      dateInnerStyle={{ background: theme.accentColor }}\r\n                      style={styles.itemStyle}\r\n                      bodyContainerStyle={{ color: theme.color }}\r\n                    >\r\n                      <h2 className=\"item-title\">\r\n                        {item.title}\r\n                      </h2>\r\n                      <div style={styles.subtitleContainerStyle}>\r\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                          {item.subtitle}\r\n                        </h4>\r\n                        {item.workType && (\r\n                        <h5 style={styles.inlineChild}>\r\n                    &nbsp;Â·\r\n                          {' '}\r\n                          {item.workType}\r\n                        </h5>\r\n                        )}\r\n                      </div>\r\n                      <ul style={styles.ulStyle}>\r\n                        {item.workDescription.map((point) => (\r\n                          <div key={point}>\r\n                            <li>\r\n                              <ReactMarkdown\r\n                                children={point}\r\n                                components={{\r\n                                  p: 'span',\r\n                                }}\r\n                              />\r\n                            </li>\r\n                            <br />\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </TimelineItem>\r\n                  </Fade>\r\n                ))}\r\n              </Timeline>\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nExperience.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\"><p className='header_text'>{title}</p></div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"],"names":["styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","props","theme","useContext","ThemeContext","header","useState","data","setData","useEffect","fetch","endpoints","method","then","res","json","experiences","catch","err","Header","title","className","Container","Timeline","lineColor","timelineLineColor","map","item","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","subtitle","workType","workDescription","point","children","components","p","FallbackSpinner"],"sourceRoot":""}